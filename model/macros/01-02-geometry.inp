!---------------------------------------
! MODEL GEOMETRY
!---------------------------------------

*afun,deg



! calculated values
!---------------------------------------

! rise bolt locations
SPS_RB_EQS = max(mod(SPS_L-2*SPS_RB_END,SPS_RB_SPC)/2,mod(mod(SPS_L-2*SPS_RB_END,SPS_RB_SPC)/2+SPS_RB_SPC/2,SPS_RB_SPC))
N_SPS_RB = (SPS_L-2*SPS_RB_END-2*SPS_RB_EQS)/SPS_RB_SPC+1

SPS_RB_X1 = SPS_RB_END
SPS_RB_X2 = SPS_RB_END+SPS_RB_EQS
*do,I,3,N_SPS_RB-1
    SPS_RB_X%I% = SPS_RB_X%I-1%+SPS_RB_SPC
*enddo
SPS_RB_X%N_SPS_RB% = SPS_L-SPS_RB_END


! seat bracket locations
*if,BRK_END,eq,0,then
    BRK_EQS = max(mod(SPS_L,BRK_SPC)/2,mod(mod(SPS_L,BRK_SPC)/2+BRK_SPC/2,BRK_SPC))
    N_BRK = (SPS_L-2*BRK_EQS)/BRK_SPC+1
*else
    BRK_EQS = 0
    N_BRK = (SPS_L-BRK_END)/BRK_SPC-mod((SPS_L-BRK_END)/BRK_SPC,1)
*endif

BRK_X1 = BRK_END+BRK_EQS
*do,I,2,N_BRK
    BRK_X%I% = BRK_X%I-1%+BRK_SPC
*enddo



! sps
!---------------------------------------

! TOP PLATE SECTION

! lap
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_W+SPS_TP,SPS_W*SPS_S+SPS_PL_LAP
k,KP0+2, 0,SPS_W+SPS_TP,SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)
k,KP0+3, 0,SPS_W,SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)
k,KP0+4, 0,SPS_W,SPS_W*SPS_S+SPS_PL_LAP
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

cm,A_VOL_SPS_TP_1,area


! heel radius
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_W-(1.5*SPS_TP),SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2) ! centre
k,KP0+2, 0,SPS_W+SPS_TP,SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)
k,KP0+3, 0,SPS_W-(1.5*SPS_TP)+(2.5*SPS_TP)*sin(atan(SPS_S)),SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)-(2.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+4, 0,SPS_W-(1.5*SPS_TP)+(1.5*SPS_TP)*sin(atan(SPS_S)),SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)-(1.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+5, 0,SPS_W,SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)
lsel,none
larc,KP0+2,KP0+3,KP0+1,2.5*SPS_TP
l,KP0+3,KP0+4
larc,KP0+4,KP0+5,KP0+1,1.5*SPS_TP
l,KP0+5,KP0+2
asel,none
al,all

cm,A_VOL_SPS_TP_2,area


! top
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_W-(1.5*SPS_TP)+(1.5*SPS_TP)*sin(atan(SPS_S)),SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)-(1.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+2, 0,SPS_W-(1.5*SPS_TP)+(2.5*SPS_TP)*sin(atan(SPS_S)),SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)-(2.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+3, 0,2.5*SPS_TP-(1.5*SPS_TP)*sin(atan(SPS_S)),-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)+(1.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+4, 0,2.5*SPS_TP-(2.5*SPS_TP)*sin(atan(SPS_S)),-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)+(2.5*SPS_TP)*cos(atan(SPS_S))
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

wprota,0,-90,0
wpoffs,,,SPS_W/2
asbw,all,sepo
wpcsys

cm,A_VOL_SPS_TP_3,area


! nose radius
*get,KP0,kp,,num,max
k,KP0+1, 0,2.5*SPS_TP,-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2) ! centre
k,KP0+2, 0,2.5*SPS_TP-(1.5*SPS_TP)*sin(atan(SPS_S)),-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)+(1.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+3, 0,SPS_TP,-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)
k,KP0+4, 0,0,-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)
k,KP0+5, 0,2.5*SPS_TP-(2.5*SPS_TP)*sin(atan(SPS_S)),-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)+(2.5*SPS_TP)*cos(atan(SPS_S))
lsel,none
larc,KP0+2,KP0+3,KP0+1,1.5*SPS_TP
l,KP0+3,KP0+4
larc,KP0+4,KP0+5,KP0+1,2.5*SPS_TP
l,KP0+5,KP0+2
asel,none
al,all

cm,A_VOL_SPS_TP_4,area


! front
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_TP,-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)
k,KP0+2, 0,SPS_TP,-SPS_H+SPS_W*SPS_S+(SPS_PL_LAP+SPS_PL_GAP)
k,KP0+3, 0,0,-SPS_H+SPS_W*SPS_S+(SPS_PL_LAP+SPS_PL_GAP)
k,KP0+4, 0,0,-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

wprota,0,0,0
wpoffs,,,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)
asbw,all
wpcsys
wprota,0,0,0
wpoffs,,,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-SPS_PL_LAP
asbw,all
wpcsys
wprota,0,0,0
wpoffs,,,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(SPS_PL_LAP+SPS_PL_GAP)
asbw,all
wpcsys

wprota,0,0,0
wpoffs,,,-SPS_H+SPS_S*SPS_W+BRK_BB_Z
asbw,all
*if,BRK_BB_SPV,ne,0,then
    wpoffs,,,BRK_BB_SPV
    asbw,all
*endif
wpcsys

cm,A_VOL_SPS_TP_5,area



! CORE / EDGE BAR SECTION

! heel
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_W-(1.5*SPS_TP),SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2) ! centre
k,KP0+2, 0,SPS_W+SPS_TP+SPS_BP-(2.5*SPS_BP),(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+3, 0,SPS_W+SPS_TP,SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)
k,KP0+4, 0,SPS_W+SPS_TP,(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+5, 0,SPS_W+SPS_TP+SPS_BP-(2.5*SPS_BP)+(1.5*SPS_BP)*sin(atan(SPS_S)),(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)-(1.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+6, 0,SPS_W-(1.5*SPS_TP)+(2.5*SPS_TP)*sin(atan(SPS_S)),SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)-(2.5*SPS_TP)*cos(atan(SPS_S))
lsel,none
l,KP0+3,KP0+4
larc,KP0+4,KP0+5,KP0+2,1.5*SPS_BP
l,KP0+5,KP0+6
larc,KP0+6,KP0+3,KP0+1,2.5*SPS_TP
asel,none
al,all

cm,A_VOL_SPS_CORE_1,area


! tread
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_W-(1.5*SPS_TP)+(2.5*SPS_TP)*sin(atan(SPS_S)),SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)-(2.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+2, 0,SPS_W+SPS_TP+SPS_BP-(2.5*SPS_BP)+(1.5*SPS_BP)*sin(atan(SPS_S)),(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)-(1.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+4, 0,2.5*SPS_TP-(1.5*SPS_TP)*sin(atan(SPS_S)),-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)+(1.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+3, 0,SPS_TP+SPS_BP+(1.5*SPS_BP)-(2.5*SPS_BP)*sin(atan(SPS_S)),(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)+(2.5*SPS_BP)*cos(atan(SPS_S))
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

wprota,0,-90,0
wpoffs,,,SPS_W/2
asbw,all,sepo
wpcsys

cm,A_VOL_SPS_CORE_2,area


! nose
*get,KP0,kp,,num,max
k,KP0+1, 0,2.5*SPS_TP,-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2) ! centre
k,KP0+2, 0,SPS_TP+SPS_BP+(1.5*SPS_BP),(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2) ! centre
k,KP0+3, 0,2.5*SPS_TP-(1.5*SPS_TP)*sin(atan(SPS_S)),-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)+(1.5*SPS_TP)*cos(atan(SPS_S))
k,KP0+4, 0,SPS_TP+SPS_BP+(1.5*SPS_BP)-(2.5*SPS_BP)*sin(atan(SPS_S)),(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)+(2.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+5, 0,SPS_TP,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+6, 0,SPS_TP,-(2.5*SPS_TP)*tan(45-atan(SPS_S)/2)
lsel,none
l,KP0+3,KP0+4
larc,KP0+4,KP0+5,KP0+2,2.5*SPS_BP
l,KP0+5,KP0+6
larc,KP0+6,KP0+3,KP0+1,1.5*SPS_TP
asel,none
al,all

cm,A_VOL_SPS_CORE_3,area



! BOTTOM PLATE SECTION

! upper
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_W+SPS_TP+SPS_BP,SPS_H+(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(SPS_PL_LAP+SPS_PL_GAP)
k,KP0+2, 0,SPS_W+SPS_TP+SPS_BP,(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+3, 0,SPS_W+SPS_TP,(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+4, 0,SPS_W+SPS_TP,SPS_H+(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(SPS_PL_LAP+SPS_PL_GAP)
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

wprota,0,0,0
wpoffs,,,SPS_W*SPS_S+(1.5*SPS_TP)*tan(45-atan(SPS_S)/2)
asbw,all
wpcsys
wprota,0,0,0
wpoffs,,,SPS_W*SPS_S+SPS_PL_LAP
asbw,all
wpcsys
wprota,0,0,0
wpoffs,,,SPS_W*SPS_S+(SPS_PL_LAP+SPS_PL_GAP)
asbw,all
wpcsys

wprota,0,0,0
wpoffs,,,SPS_S*SPS_W+BRK_BB_Z
asbw,all
*if,BRK_BB_SPV,ne,0,then
    wpoffs,,,BRK_BB_SPV
    asbw,all
*endif
wpcsys

cm,A_VOL_SPS_BP_1,area


! heel radius
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_W+SPS_TP+SPS_BP-(2.5*SPS_BP),(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2) ! centre
k,KP0+2, 0,SPS_W+SPS_TP+SPS_BP,(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+3, 0,SPS_W+SPS_TP+SPS_BP-(2.5*SPS_BP)+(2.5*SPS_BP)*sin(atan(SPS_S)),(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)-(2.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+4, 0,SPS_W+SPS_TP+SPS_BP-(2.5*SPS_BP)+(1.5*SPS_BP)*sin(atan(SPS_S)),(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)-(1.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+5, 0,SPS_W+SPS_TP,(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)
lsel,none
larc,KP0+2,KP0+3,KP0+1,2.5*SPS_BP
l,KP0+3,KP0+4
larc,KP0+4,KP0+5,KP0+1,1.5*SPS_BP
l,KP0+5,KP0+2
asel,none
al,all

cm,A_VOL_SPS_BP_2,area


! bottom
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_W+SPS_TP+SPS_BP-(2.5*SPS_BP)+(1.5*SPS_BP)*sin(atan(SPS_S)),(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)-(1.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+2, 0,SPS_W+SPS_TP+SPS_BP-(2.5*SPS_BP)+(2.5*SPS_BP)*sin(atan(SPS_S)),(SPS_W+SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))+(2.5*SPS_BP)*tan(45-atan(SPS_S)/2)-(2.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+3, 0,SPS_TP+SPS_BP+(1.5*SPS_BP)-(1.5*SPS_BP)*sin(atan(SPS_S)),(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)+(1.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+4, 0,SPS_TP+SPS_BP+(1.5*SPS_BP)-(2.5*SPS_BP)*sin(atan(SPS_S)),(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)+(2.5*SPS_BP)*cos(atan(SPS_S))
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

wprota,0,-90,0
wpoffs,,,SPS_W/2
asbw,all,sepo
wpcsys

cm,A_VOL_SPS_BP_3,area


! nose radius
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_TP+SPS_BP+(1.5*SPS_BP),(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2) ! centre
k,KP0+2, 0,SPS_TP+SPS_BP+(1.5*SPS_BP)-(1.5*SPS_BP)*sin(atan(SPS_S)),(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)+(1.5*SPS_BP)*cos(atan(SPS_S))
k,KP0+3, 0,SPS_TP+SPS_BP,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+4, 0,SPS_TP,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+5, 0,SPS_TP+SPS_BP+(1.5*SPS_BP)-(2.5*SPS_BP)*sin(atan(SPS_S)),(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)+(2.5*SPS_BP)*cos(atan(SPS_S))
lsel,none
larc,KP0+2,KP0+3,KP0+1,1.5*SPS_BP
l,KP0+3,KP0+4
larc,KP0+4,KP0+5,KP0+1,2.5*SPS_BP
l,KP0+5,KP0+2
asel,none
al,all

cm,A_VOL_SPS_BP_4,area


! front
*get,KP0,kp,,num,max
k,KP0+1, 0,SPS_TP+SPS_BP,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)
k,KP0+2, 0,SPS_TP+SPS_BP,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-SPS_PL_LAP
k,KP0+3, 0,SPS_TP,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-SPS_PL_LAP
k,KP0+4, 0,SPS_TP,(SPS_TP+SPS_BP)*SPS_S-(SPS_TP+SPS_CORE+SPS_BP)/cos(atan(SPS_S))-(1.5*SPS_BP)*tan(45-atan(SPS_S)/2)
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

cm,A_VOL_SPS_BP_5,area



! COMPONENTS

asel,none
*do,H,1,5
    cmsel,a,A_VOL_SPS_TP_%H%
*enddo
cm,A_VOL_SPS_TP,area

asel,none
*do,H,1,3
    cmsel,a,A_VOL_SPS_CORE_%H%
*enddo
cm,A_VOL_SPS_CORE,area

asel,none
*do,H,1,5
    cmsel,a,A_VOL_SPS_BP_%H%
*enddo
cm,A_VOL_SPS_BP,area



! EXTRUDE

! extrude
*do,H,1,5
    asel,none
    cmsel,a,A_VOL_SPS_TP_%H%
    vsel,none
    vext,all,,,SPS_L

    *do,I,1,N_BRK
        wprota,90,90,0
        wpoffs,,,BRK_X%I%-BRK_BB_SPH/2
        vsbw,all
        *if,BRK_BB_SPH,ne,0,then
            wpoffs,,,BRK_BB_SPH
            vsbw,all
        *endif
        wpcsys
    *enddo

    cm,V_SPS_TP_%H%,volu
*enddo

*do,H,1,3
    asel,none
    cmsel,a,A_VOL_SPS_CORE_%H%
    vsel,none
    vext,all,,,SPS_L

    *do,I,1,N_BRK
        wprota,90,90,0
        wpoffs,,,BRK_X%I%-BRK_BB_SPH/2
        vsbw,all
        *if,BRK_BB_SPH,ne,0,then
            wpoffs,,,BRK_BB_SPH
            vsbw,all
        *endif
        wpcsys
    *enddo

    cm,V_SPS_CORE_%H%,volu
*enddo

*do,H,1,5
    asel,none
    cmsel,a,A_VOL_SPS_BP_%H%
    vsel,none
    vext,all,,,SPS_L

    *do,I,1,N_BRK
        wprota,90,90,0
        wpoffs,,,BRK_X%I%-BRK_BB_SPH/2
        vsbw,all
        *if,BRK_BB_SPH,ne,0,then
            wpoffs,,,BRK_BB_SPH
            vsbw,all
        *endif
        wpcsys
    *enddo

    cm,V_SPS_BP_%H%,volu
*enddo


! components
vsel,none
*do,H,1,5
    cmsel,a,V_SPS_TP_%H%
*enddo
cm,V_SPS_TP,volu

vsel,none
*do,H,1,3
    cmsel,a,V_SPS_CORE_%H%
*enddo
cm,V_SPS_CORE,volu

vsel,none
*do,H,1,5
    cmsel,a,V_SPS_BP_%H%
*enddo
cm,V_SPS_BP,volu


! material
vsel,none
cmsel,a,V_SPS_TP
cmsel,a,V_SPS_BP
vatt,MAT_STEEL,RCO_DUMMY,ETY_SOLID

vsel,none
cmsel,a,V_SPS_CORE
vatt,MAT_ELAST,RCO_DUMMY,ETY_SOLID

vsel,none
cmsel,a,V_SPS_TP
cmsel,a,V_SPS_CORE
cmsel,a,V_SPS_BP
cm,V_SPS,volu


! generate and merge geometry
vsel,none
vsel,a,loc,y,0,SPS_W/2
vgen,1,all,,,0,SPS_W,SPS_H,,,1

vsel,all
aslv
lsla
ksll
nummrg,kp,TOL



! seat brackets
!---------------------------------------

! BRACKET

! baseplate
*get,KP0,kp,,num,max
k,KP0+1, BRK_X1-BRK_W/2,SPS_W,SPS_S*SPS_W+BRK_Z
k,KP0+2, BRK_X1+BRK_W/2,SPS_W,SPS_S*SPS_W+BRK_Z
k,KP0+3, BRK_X1+BRK_W/2,SPS_W,SPS_S*SPS_W+BRK_Z+BRK_H
k,KP0+4, BRK_X1-BRK_W/2,SPS_W,SPS_S*SPS_W+BRK_Z+BRK_H
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

wprota,90,90,0
wpoffs,,,BRK_X1-BRK_BB_SPH/2
asbw,all
*if,BRK_BB_SPH,ne,0,then
    wpoffs,,,BRK_BB_SPH
    asbw,all
*endif
wpcsys
wprota,0,0,0
wpoffs,,,SPS_S*SPS_W+BRK_BB_Z
asbw,all
*if,BRK_BB_SPV,ne,0,then
    wpoffs,,,BRK_BB_SPV
    asbw,all
*endif
wpcsys

*if,BRK_BB_SPH,eq,0,then
    wprota,90,90,0
    wpoffs,,,BRK_X1-BRK_W/2+BRK_ST_T/2
    asbw,all
    wpoffs,,,BRK_ST_T/2
    asbw,all
    wpcsys
*else
    wprota,90,90,0
    wpoffs,,,BRK_X1-BRK_ST_T/2
    asbw,all
    wpoffs,,,BRK_ST_T/2
    asbw,all
    wpoffs,,,BRK_ST_T/2
    asbw,all
    wpcsys
*endif

cm,A_VOL_BRK_PL,area


! stanchion
*get,KP0,kp,,num,max
*if,BRK_BB_SPH,eq,0,then
    k,KP0+1, BRK_X1-BRK_W/2,SPS_W-BRK_T,SPS_S*SPS_W+BRK_Z
    k,KP0+2, BRK_X1-BRK_W/2,SPS_W-BRK_ST_L,SPS_S*SPS_W+BRK_Z
    k,KP0+3, BRK_X1-BRK_W/2,SPS_W-BRK_ST_L,SPS_S*SPS_W+BRK_Z+BRK_H
    k,KP0+4, BRK_X1-BRK_W/2,SPS_W-BRK_T,SPS_S*SPS_W+BRK_Z+BRK_H
*else
    k,KP0+1, BRK_X1-BRK_ST_T/2,SPS_W-BRK_T,SPS_S*SPS_W+BRK_Z
    k,KP0+2, BRK_X1-BRK_ST_T/2,SPS_W-BRK_ST_L,SPS_S*SPS_W+BRK_Z
    k,KP0+3, BRK_X1-BRK_ST_T/2,SPS_W-BRK_ST_L,SPS_S*SPS_W+BRK_Z+BRK_H
    k,KP0+4, BRK_X1-BRK_ST_T/2,SPS_W-BRK_T,SPS_S*SPS_W+BRK_Z+BRK_H
*endif
lsel,none
l,KP0+1,KP0+2
l,KP0+2,KP0+3
l,KP0+3,KP0+4
l,KP0+4,KP0+1
asel,none
al,all

cm,A_VOL_BRK_ST,area



! EXTRUDE

! extrude
asel,none
cmsel,a,A_VOL_BRK_PL
vsel,none
vext,all,,,,-BRK_T
cm,V_BRK_PL,volu

asel,none
cmsel,a,A_VOL_BRK_ST
vsel,none
vext,all,,,BRK_ST_T

*if,BRK_BB_SPH,ne,0,then
    wprota,90,90,0
    wpoffs,,,BRK_X1
    vsbw,all
    wpcsys
*endif

cm,V_BRK_ST,volu


! compnents
vsel,none
cmsel,a,V_BRK_PL
cmsel,a,V_BRK_ST
aslv
lsla
ksll
nummrg,kp,TOL
cm,V_BRK_1,volu


! material
vsel,none
cmsel,a,V_BRK_1
vatt,MAT_STEEL,RCO_DUMMY,ETY_SOLID


! generate and merge geometry
*do,I,2,N_BRK
    vsel,none
    cmsel,a,V_BRK_1
    vgen,2,all,,,BRK_X%I%-BRK_X1
    cmsel,u,V_BRK_1
    cm,V_BRK_%I%,volu
*enddo
